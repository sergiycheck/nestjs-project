@use 'sass:math';

@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return math.div($number, ($number * 0 + 1));
  }

  @return $number;
}

@function getBiggerValueBasedOnFactor($value, $factor) {
  @return $value + ($value * $factor);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;

      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            calc((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }

      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

$min_width: 1200px;
$max_width: 2900px;
$min_font: 14px;
$max_font: 22px;

html,
body,
#root,
.page {
  min-height: 100vh;
  @include fluid-type($min_width, $max_width, $min_font, $max_font);
}

.page {
  display: flex;
  flex-direction: column;

  .page__header,
  .page__footer {
    flex-shrink: 0;
  }

  .page__body {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }
}
